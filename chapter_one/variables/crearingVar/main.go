/*
Переменные и их объявления

Для хранения данных в программе применяются переменные.
Переменная представляет собой именованный участок памяти,
который может хранить некоторое значение.
Для бъявления переменной используется ключевое слово var - variable(переменная)
после которой указывается имя переменной, а затем ее тип:
var name string - создана меременная Имя которая хранит строковые значения.

Имя переменной - это произвольный идентификатор, состоящий из букв,
цифр и символа подчеркивания. Однако первым символом должно быть
либо алфавитный словол, либо символ подчеркивания. Так же нужно помнить,
что именна переменных не могут совпадать с зарезервированными ключевыми словами,
такиеми как:break, case,const,continue,befault,befer,else,fallthrough,for,
funv,go,goto,if,import,interface,map,package,range,return,select,struct,
switch,type,var.

Также можно объявить несколько переменных одновременно через запятую:
var a,b,c int

Важно отметить, что Go - регистрозависимый язык,поэтому с именами hello и Hello
будут представлять разные переменные.

Мы также можем задать значения переменным при их объявлении.
var x int = 10
var c string = "Hello, world"
var z float64 = 1.045
Кроме того, Go позволяет опустить тип и автоматически определить его на
основе присваемого значения:
var a = 12
var hello = "Hello"

Для хранения символов в Go принято использовать типы int32 и rune.
СИмволы заключаются в одинарные кавычки, а компилятор автоматически преобразует
их в код символа по стандарту Unicode. Например, вместо символа 'c' в памяти
будет храниться числовое значение 99.
Для преобразования этого числового значения обратно в символ можно использовать
функцию string()
var symbol int32 = 'c'
fmt.Println(string(symbol)) //Вывод c

Значения по умолчанию
Когда переменная объявляется, но ей не присваивается явное значение,
она автоматически получает значение по умолчанию для своего типа. Например:
0 - для целочисленных типов, таких как int,uint,int64
0.0 -для типов с плавающей точкой float32,float64 
false - для типа bool
Пустая строка("") - для типа string
nil - для указателей и других ссылочных типов
*/
